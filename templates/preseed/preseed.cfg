#jinja2: trim_blocks: "false", lstrip_blocks: "true"
# {{ ansible_managed }}

d-i debconf/priority string critical

### Localization
d-i debian-installer/locale string {{ netboot_locale }}

d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap select us
d-i keyboard-configuration/layoutcode string us

### Network configuration
{% if netboot_network_interface != {} %}
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually
d-i netcfg/disable_dhcp boolean true
d-i preseed/early_command string kill-all-dhcp; netcfg

  {% set _family = netboot_network_interface.families | selectattr("type", "equalto", "static") | first %}
d-i netcfg/get_ipaddress string {{ _family.address | ansible.utils.ipaddr("address") }}
d-i netcfg/get_netmask string {{ _family.address | ansible.utils.ipaddr("netmask") }}
d-i netcfg/get_gateway string {{ _family.gateway }}
  {% set _dns_nameservers = [] %}
  {% if _family.name == "ipv4" %}
    {% set _dns_nameservers = netboot_network_interface.dns_nameservers | default([]) | ansible.utils.ipv4 %}
  {% elif _family.name == "ipv6" %}
    {% set _dns_nameservers = netboot_network_interface.dns_nameservers | default([]) | ansible.utils.ipv6 %}
  {% endif %}
d-i netcfg/get_nameservers string{{ " " + _dns_nameservers | join(" ") if _dns_nameservers | length > 0 else "" }}
d-i netcfg/confirm_static boolean true

d-i netcfg/choose_interface select {{ netboot_network_interface.name }}
{% else %}
d-i netcfg/choose_interface select auto
{% endif %}
d-i netcfg/get_hostname string {{ inventory_hostname }}
d-i netcfg/get_domain string{{ " " + netboot_domain if netboot_domain != "" else "" }}
d-i netcfg/wireless_wep string

d-i hw-detect/load_firmware boolean false

### Mirror settings
d-i mirror/protocol string {{ netboot_mirror | urlsplit("scheme") }}
d-i mirror/country string manual
d-i mirror/{{ netboot_mirror | urlsplit("scheme") }}/hostname string {{ netboot_mirror | urlsplit("hostname") }}
d-i mirror/{{ netboot_mirror | urlsplit("scheme") }}/directory string {{ netboot_mirror | urlsplit("path") }}
d-i mirror/{{ netboot_mirror | urlsplit("scheme") }}/proxy string

### Account setup
d-i passwd/root-login boolean {{ "true" if root_password != "" else "false" }}
{% if root_password != "" %}
d-i passwd/root-password-crypted password {{ root_password | password_hash("sha512") }}
{% endif %}

d-i passwd/make-user boolean {{ "true" if provision_user_username != "" else "false" }}
{% if provision_user_username != "" %}
d-i passwd/username string {{ provision_user_username }}
d-i passwd/user-fullname string {{ provision_user_fullname }}
d-i passwd/user-password-crypted password {{ provision_user_password | password_hash("sha512") }}
  {% if provision_user_uid != 0 %}
d-i passwd/user-uid string {{ provision_user_uid }}
  {% endif %}
  {% if provision_user_groups | length > 0 %}
d-i passwd/user-default-groups string {{ provision_user_groups | join(" ") }}
  {% endif %}
d-i user-setup/encrypt-home boolean false
{% endif %}

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string {{ netboot_timezone }}

d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string {{ netboot_ntp_server }}

{% include 'partition/' + netboot_partition.method | default("regular") + '.cfg' %}


### Package selection
{% set _tasks = netboot_tasks + netboot_extra_tasks %}
{% if desktop_env != "" %}
    {% set _tasks = _tasks + [desktop_env] %}
{% endif %}
tasksel tasksel/first multiselect {{ _tasks | join(", ") }}

{% set _packages = netboot_packages + netboot_extra_packages %}
d-i pkgsel/include string {{ _packages | join(" ") }}
d-i pkgsel/update-policy select {{ "unattended-upgrades" if netboot_enable_unattended_upgrades | bool else "none" }}
d-i pkgsel/upgrade select none

popularity-contest popularity-contest/participate boolean false

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
{% if netboot_disk != "" %}
d-i grub-installer/bootdev string {{ netboot_disk }}
{% endif %}
d-i finish-install/reboot_in_progress note
d-i finish-install/keep-consoles boolean true

{% set _late = [] %}
{% if provision_user_public_key != "" %}
  {% set _ = _late.append('in-target mkdir -m u=rwx,g=,o= /home/{}/.ssh'.format(provision_user_username)) %}
  {% set _ = _late.append('in-target sh -c "echo \'{}\' >> /home/{}/.ssh/authorized_keys"'.format(provision_user_public_key, provision_user_username)) %}
  {% set _ = _late.append('in-target chmod u=rw,g=,o= /home/{}/.ssh/authorized_keys'.format(provision_user_username)) %}
  {% set _ = _late.append('in-target chown -R {0}:{0} /home/{0}/.ssh'.format(provision_user_username)) %}
{% endif %}
{% if netboot_groups != [] %}
  {% for _group in netboot_groups %}
    {% set _ = _late.append("in-target groupadd -g {} {}".format(_group.gid, _group.name)) %}
  {% endfor %}
{% endif %}
{% if _late | length > 0 %}
d-i preseed/late_command string \
{{ _late | join(';\\\n') }}
{% endif %}
{% if netboot_extra_preseed_lines != "" %}

{{ netboot_extra_preseed_lines }}
{% endif %}
